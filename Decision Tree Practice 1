{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b2e133d2",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2022-11-21T03:27:06.978169Z",
     "iopub.status.busy": "2022-11-21T03:27:06.977556Z",
     "iopub.status.idle": "2022-11-21T03:27:06.994126Z",
     "shell.execute_reply": "2022-11-21T03:27:06.992953Z"
    },
    "papermill": {
     "duration": 0.023297,
     "end_time": "2022-11-21T03:27:06.996389",
     "exception": false,
     "start_time": "2022-11-21T03:27:06.973092",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/salaries/salaries.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b681f699",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-21T03:27:07.002921Z",
     "iopub.status.busy": "2022-11-21T03:27:07.002461Z",
     "iopub.status.idle": "2022-11-21T03:27:07.038059Z",
     "shell.execute_reply": "2022-11-21T03:27:07.037193Z"
    },
    "papermill": {
     "duration": 0.041022,
     "end_time": "2022-11-21T03:27:07.039911",
     "exception": false,
     "start_time": "2022-11-21T03:27:06.998889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>job</th>\n",
       "      <th>degree</th>\n",
       "      <th>salary_more_then_100k</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>google</td>\n",
       "      <td>sales executive</td>\n",
       "      <td>bachelors</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>google</td>\n",
       "      <td>sales executive</td>\n",
       "      <td>masters</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>google</td>\n",
       "      <td>business manager</td>\n",
       "      <td>bachelors</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>google</td>\n",
       "      <td>business manager</td>\n",
       "      <td>masters</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>google</td>\n",
       "      <td>computer programmer</td>\n",
       "      <td>bachelors</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  company                  job     degree  salary_more_then_100k\n",
       "0  google      sales executive  bachelors                      0\n",
       "1  google      sales executive    masters                      0\n",
       "2  google     business manager  bachelors                      1\n",
       "3  google     business manager    masters                      1\n",
       "4  google  computer programmer  bachelors                      0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"../input/salaries/salaries.csv\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c592a2b7",
   "metadata": {
    "papermill": {
     "duration": 0.002372,
     "end_time": "2022-11-21T03:27:07.044992",
     "exception": false,
     "start_time": "2022-11-21T03:27:07.042620",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Now the target variable must be initialized."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6357ecf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-21T03:27:07.051588Z",
     "iopub.status.busy": "2022-11-21T03:27:07.050752Z",
     "iopub.status.idle": "2022-11-21T03:27:07.063753Z",
     "shell.execute_reply": "2022-11-21T03:27:07.062491Z"
    },
    "papermill": {
     "duration": 0.018497,
     "end_time": "2022-11-21T03:27:07.065866",
     "exception": false,
     "start_time": "2022-11-21T03:27:07.047369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "inputs = df.drop('salary_more_then_100k', axis = 'columns')\n",
    "target = df['salary_more_then_100k']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "385ab3ca",
   "metadata": {
    "papermill": {
     "duration": 0.002285,
     "end_time": "2022-11-21T03:27:07.070932",
     "exception": false,
     "start_time": "2022-11-21T03:27:07.068647",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Table after initializing the target**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1f5746ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-21T03:27:07.078396Z",
     "iopub.status.busy": "2022-11-21T03:27:07.077751Z",
     "iopub.status.idle": "2022-11-21T03:27:07.085957Z",
     "shell.execute_reply": "2022-11-21T03:27:07.085382Z"
    },
    "papermill": {
     "duration": 0.013894,
     "end_time": "2022-11-21T03:27:07.087509",
     "exception": false,
     "start_time": "2022-11-21T03:27:07.073615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>job</th>\n",
       "      <th>degree</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>google</td>\n",
       "      <td>sales executive</td>\n",
       "      <td>bachelors</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>google</td>\n",
       "      <td>sales executive</td>\n",
       "      <td>masters</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>google</td>\n",
       "      <td>business manager</td>\n",
       "      <td>bachelors</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>google</td>\n",
       "      <td>business manager</td>\n",
       "      <td>masters</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>google</td>\n",
       "      <td>computer programmer</td>\n",
       "      <td>bachelors</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  company                  job     degree\n",
       "0  google      sales executive  bachelors\n",
       "1  google      sales executive    masters\n",
       "2  google     business manager  bachelors\n",
       "3  google     business manager    masters\n",
       "4  google  computer programmer  bachelors"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inputs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f8a3d9e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-21T03:27:07.094247Z",
     "iopub.status.busy": "2022-11-21T03:27:07.093625Z",
     "iopub.status.idle": "2022-11-21T03:27:08.274742Z",
     "shell.execute_reply": "2022-11-21T03:27:08.273425Z"
    },
    "papermill": {
     "duration": 1.187395,
     "end_time": "2022-11-21T03:27:08.277503",
     "exception": false,
     "start_time": "2022-11-21T03:27:07.090108",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3077f6af",
   "metadata": {
    "papermill": {
     "duration": 0.003287,
     "end_time": "2022-11-21T03:27:08.286494",
     "exception": false,
     "start_time": "2022-11-21T03:27:08.283207",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.746115,
   "end_time": "2022-11-21T03:27:09.011992",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-11-21T03:26:59.265877",
   "version": "2.3.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
